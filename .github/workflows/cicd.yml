name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-test-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and test API
        run: |
          dotnet build
          dotnet test --logger "trx;LogFileName=test_results.trx"

      - name: Publish test results
        uses: actions/upload-artifact@v2
        with:
          name: Test Results
          path: test_results.trx

  build-and-test-webapp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and test Webapp
        run: |
          cd webapp/frontend
          npm ci
          npm run build
          npm test

  deploy-api:
    needs: build-and-test-api
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-test-api.result == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy API to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{ vars.HEROKU_APP_NAME_API }}
          heroku_email: ${{ vars.HEROKU_EMAIL }}
          usedocker: true
          appdir: api
          docker_build_args: |
            ASPNETCORE_ENVIRONMENT
            PORT
        env:
          ASPNETCORE_ENVIRONMENT: production
          PORT: 80

  deploy-webapp:
    needs: build-and-test-webapp
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-test-webapp.result == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy WebApp to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{ vars.HEROKU_APP_NAME_WEBAPP }}
          heroku_email: ${{ vars.HEROKU_EMAIL }}
          usedocker: true
          appdir: webapp
          docker_build_args: |
            NODE_ENV
        env:
          NODE_ENV: production
